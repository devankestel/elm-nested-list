var _devankestel$elm_nested_list$Main$task = function (task) {
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(task.completion.isCompleted)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(task.title),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(task.category.name),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(task.category.pointValue)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										_elm_lang$core$Basics$toString(task.completion.dateCompleted)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _devankestel$elm_nested_list$Main$taskList = function (model) {
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _devankestel$elm_nested_list$Main$task, model.tasks));
};
var _devankestel$elm_nested_list$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Tasks'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _devankestel$elm_nested_list$Main$taskList(model),
				_1: {ctor: '[]'}
			}
		});
};
var _devankestel$elm_nested_list$Main$maze = {name: 'Maze', pointValue: 10};
var _devankestel$elm_nested_list$Main$mermaid = {name: 'Mermaid', pointValue: 3};
var _devankestel$elm_nested_list$Main$dragon = {name: 'Dragon', pointValue: 1};
var _devankestel$elm_nested_list$Main$categories = {
	ctor: '::',
	_0: _devankestel$elm_nested_list$Main$dragon,
	_1: {
		ctor: '::',
		_0: _devankestel$elm_nested_list$Main$mermaid,
		_1: {
			ctor: '::',
			_0: _devankestel$elm_nested_list$Main$maze,
			_1: {ctor: '[]'}
		}
	}
};
var _devankestel$elm_nested_list$Main$tasks = {
	ctor: '::',
	_0: {
		title: 'This is the first task. Dragons.',
		category: _devankestel$elm_nested_list$Main$dragon,
		completion: {isCompleted: false, dateCompleted: 0}
	},
	_1: {
		ctor: '::',
		_0: {
			title: 'This is the second task. Mermaids.',
			category: _devankestel$elm_nested_list$Main$mermaid,
			completion: {isCompleted: false, dateCompleted: 0}
		},
		_1: {
			ctor: '::',
			_0: {
				title: 'This is the third task. Maze.',
				category: _devankestel$elm_nested_list$Main$maze,
				completion: {isCompleted: false, dateCompleted: 0}
			},
			_1: {ctor: '[]'}
		}
	}
};
var _devankestel$elm_nested_list$Main$initModel = {categories: _devankestel$elm_nested_list$Main$categories, tasks: _devankestel$elm_nested_list$Main$tasks};
var _devankestel$elm_nested_list$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return _devankestel$elm_nested_list$Main$initModel;
	});
var _devankestel$elm_nested_list$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _devankestel$elm_nested_list$Main$initModel, view: _devankestel$elm_nested_list$Main$view, update: _devankestel$elm_nested_list$Main$update})();
var _devankestel$elm_nested_list$Main$Category = F2(
	function (a, b) {
		return {name: a, pointValue: b};
	});
var _devankestel$elm_nested_list$Main$Completion = F2(
	function (a, b) {
		return {isCompleted: a, dateCompleted: b};
	});
var _devankestel$elm_nested_list$Main$Task = F3(
	function (a, b, c) {
		return {title: a, category: b, completion: c};
	});
var _devankestel$elm_nested_list$Main$Model = F2(
	function (a, b) {
		return {categories: a, tasks: b};
	});
var _devankestel$elm_nested_list$Main$Clear = {ctor: 'Clear'};
